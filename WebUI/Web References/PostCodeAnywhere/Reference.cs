//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Orchestrator.WebUI.PostCodeAnywhere {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LookupUKSoap", Namespace="PostcodeAnywhere2")]
    public partial class LookupUK : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BrowseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Browse_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByArea_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPostcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPostcode_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPostcodeFilteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPostcodeFiltered_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByCoordinatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByCoordinates_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByOutcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByOutcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByOrganisationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByOrganisation_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByOrganisation_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreet_DatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetFilteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetFiltered_DatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreet_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByBuilding_DatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByBuilding_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetKey_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByStreetKey_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByLocalityKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByLocalityKey_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByLocation_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Location_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByFreeTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByFreeText_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByFreeText_CombinedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAddress_SimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback FastAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAddress_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FastAddress_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DistanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestPostcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Nearest_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredNearestOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredNearest_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestRadialOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestRadial_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredNearestRadialOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredNearestRadial_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Changes_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Cleanse_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchCleanseOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchCleanse_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchFetchOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchFetch_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByPostcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByOutcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByOutcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsBySectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsBySector_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByStreetKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatisticsByStreetKey_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestOutcodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestOutcodes_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestSectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NearestSectors_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPoBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByPoBox_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodePostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodePostcode_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodeAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodeAddressId_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodeAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeocodeAddress_DataSetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LookupUK() {
            this.Url = global::Orchestrator.WebUI.Properties.Settings.Default.WebUI_PostCodeAnywhere_LookupUK;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BrowseCompletedEventHandler BrowseCompleted;
        
        /// <remarks/>
        public event Browse_DataSetCompletedEventHandler Browse_DataSetCompleted;
        
        /// <remarks/>
        public event ByAreaCompletedEventHandler ByAreaCompleted;
        
        /// <remarks/>
        public event ByArea_DataSetCompletedEventHandler ByArea_DataSetCompleted;
        
        /// <remarks/>
        public event ByPostcodeCompletedEventHandler ByPostcodeCompleted;
        
        /// <remarks/>
        public event ByPostcode_DataSetCompletedEventHandler ByPostcode_DataSetCompleted;
        
        /// <remarks/>
        public event ByPostcode_CombinedCompletedEventHandler ByPostcode_CombinedCompleted;
        
        /// <remarks/>
        public event ByPostcodeFilteredCompletedEventHandler ByPostcodeFilteredCompleted;
        
        /// <remarks/>
        public event ByPostcodeFiltered_DataSetCompletedEventHandler ByPostcodeFiltered_DataSetCompleted;
        
        /// <remarks/>
        public event ByCoordinatesCompletedEventHandler ByCoordinatesCompleted;
        
        /// <remarks/>
        public event ByCoordinates_DataSetCompletedEventHandler ByCoordinates_DataSetCompleted;
        
        /// <remarks/>
        public event ByOutcodeCompletedEventHandler ByOutcodeCompleted;
        
        /// <remarks/>
        public event ByOutcode_DataSetCompletedEventHandler ByOutcode_DataSetCompleted;
        
        /// <remarks/>
        public event ByOrganisationCompletedEventHandler ByOrganisationCompleted;
        
        /// <remarks/>
        public event ByOrganisation_DataSetCompletedEventHandler ByOrganisation_DataSetCompleted;
        
        /// <remarks/>
        public event ByOrganisation_CombinedCompletedEventHandler ByOrganisation_CombinedCompleted;
        
        /// <remarks/>
        public event ByStreetCompletedEventHandler ByStreetCompleted;
        
        /// <remarks/>
        public event ByStreet_DatasetCompletedEventHandler ByStreet_DatasetCompleted;
        
        /// <remarks/>
        public event ByStreetFilteredCompletedEventHandler ByStreetFilteredCompleted;
        
        /// <remarks/>
        public event ByStreetFiltered_DatasetCompletedEventHandler ByStreetFiltered_DatasetCompleted;
        
        /// <remarks/>
        public event ByStreet_CombinedCompletedEventHandler ByStreet_CombinedCompleted;
        
        /// <remarks/>
        public event ByBuildingCompletedEventHandler ByBuildingCompleted;
        
        /// <remarks/>
        public event ByBuilding_DatasetCompletedEventHandler ByBuilding_DatasetCompleted;
        
        /// <remarks/>
        public event ByBuilding_CombinedCompletedEventHandler ByBuilding_CombinedCompleted;
        
        /// <remarks/>
        public event ByStreetKeyCompletedEventHandler ByStreetKeyCompleted;
        
        /// <remarks/>
        public event ByStreetKey_DataSetCompletedEventHandler ByStreetKey_DataSetCompleted;
        
        /// <remarks/>
        public event ByStreetKey_CombinedCompletedEventHandler ByStreetKey_CombinedCompleted;
        
        /// <remarks/>
        public event ByLocalityKeyCompletedEventHandler ByLocalityKeyCompleted;
        
        /// <remarks/>
        public event ByLocalityKey_DataSetCompletedEventHandler ByLocalityKey_DataSetCompleted;
        
        /// <remarks/>
        public event ByLocationCompletedEventHandler ByLocationCompleted;
        
        /// <remarks/>
        public event ByLocation_DataSetCompletedEventHandler ByLocation_DataSetCompleted;
        
        /// <remarks/>
        public event LocationCompletedEventHandler LocationCompleted;
        
        /// <remarks/>
        public event Location_DataSetCompletedEventHandler Location_DataSetCompleted;
        
        /// <remarks/>
        public event ByFreeTextCompletedEventHandler ByFreeTextCompleted;
        
        /// <remarks/>
        public event ByFreeText_DataSetCompletedEventHandler ByFreeText_DataSetCompleted;
        
        /// <remarks/>
        public event ByFreeText_CombinedCompletedEventHandler ByFreeText_CombinedCompleted;
        
        /// <remarks/>
        public event FetchAddress_SimpleCompletedEventHandler FetchAddress_SimpleCompleted;
        
        /// <remarks/>
        public event FetchAddressCompletedEventHandler FetchAddressCompleted;
        
        /// <remarks/>
        public event FastAddressCompletedEventHandler FastAddressCompleted;
        
        /// <remarks/>
        public event FetchAddress_DataSetCompletedEventHandler FetchAddress_DataSetCompleted;
        
        /// <remarks/>
        public event FastAddress_DataSetCompletedEventHandler FastAddress_DataSetCompleted;
        
        /// <remarks/>
        public event DistanceCompletedEventHandler DistanceCompleted;
        
        /// <remarks/>
        public event NearestPostcodeCompletedEventHandler NearestPostcodeCompleted;
        
        /// <remarks/>
        public event NearestPostcode_DataSetCompletedEventHandler NearestPostcode_DataSetCompleted;
        
        /// <remarks/>
        public event NearestCompletedEventHandler NearestCompleted;
        
        /// <remarks/>
        public event Nearest_DataSetCompletedEventHandler Nearest_DataSetCompleted;
        
        /// <remarks/>
        public event StoredNearestCompletedEventHandler StoredNearestCompleted;
        
        /// <remarks/>
        public event StoredNearest_DataSetCompletedEventHandler StoredNearest_DataSetCompleted;
        
        /// <remarks/>
        public event NearestRadialCompletedEventHandler NearestRadialCompleted;
        
        /// <remarks/>
        public event NearestRadial_DataSetCompletedEventHandler NearestRadial_DataSetCompleted;
        
        /// <remarks/>
        public event StoredNearestRadialCompletedEventHandler StoredNearestRadialCompleted;
        
        /// <remarks/>
        public event StoredNearestRadial_DataSetCompletedEventHandler StoredNearestRadial_DataSetCompleted;
        
        /// <remarks/>
        public event ChangesCompletedEventHandler ChangesCompleted;
        
        /// <remarks/>
        public event Changes_DataSetCompletedEventHandler Changes_DataSetCompleted;
        
        /// <remarks/>
        public event CleanseCompletedEventHandler CleanseCompleted;
        
        /// <remarks/>
        public event Cleanse_DataSetCompletedEventHandler Cleanse_DataSetCompleted;
        
        /// <remarks/>
        public event BatchCleanseCompletedEventHandler BatchCleanseCompleted;
        
        /// <remarks/>
        public event BatchCleanse_DataSetCompletedEventHandler BatchCleanse_DataSetCompleted;
        
        /// <remarks/>
        public event BatchFetchCompletedEventHandler BatchFetchCompleted;
        
        /// <remarks/>
        public event BatchFetch_DataSetCompletedEventHandler BatchFetch_DataSetCompleted;
        
        /// <remarks/>
        public event StatisticsByPostcodeCompletedEventHandler StatisticsByPostcodeCompleted;
        
        /// <remarks/>
        public event StatisticsByPostcode_DataSetCompletedEventHandler StatisticsByPostcode_DataSetCompleted;
        
        /// <remarks/>
        public event StatisticsByOutcodeCompletedEventHandler StatisticsByOutcodeCompleted;
        
        /// <remarks/>
        public event StatisticsByOutcode_DataSetCompletedEventHandler StatisticsByOutcode_DataSetCompleted;
        
        /// <remarks/>
        public event StatisticsBySectorCompletedEventHandler StatisticsBySectorCompleted;
        
        /// <remarks/>
        public event StatisticsBySector_DataSetCompletedEventHandler StatisticsBySector_DataSetCompleted;
        
        /// <remarks/>
        public event StatisticsByStreetKeyCompletedEventHandler StatisticsByStreetKeyCompleted;
        
        /// <remarks/>
        public event StatisticsByStreetKey_DataSetCompletedEventHandler StatisticsByStreetKey_DataSetCompleted;
        
        /// <remarks/>
        public event NearestOutcodesCompletedEventHandler NearestOutcodesCompleted;
        
        /// <remarks/>
        public event NearestOutcodes_DataSetCompletedEventHandler NearestOutcodes_DataSetCompleted;
        
        /// <remarks/>
        public event NearestSectorsCompletedEventHandler NearestSectorsCompleted;
        
        /// <remarks/>
        public event NearestSectors_DataSetCompletedEventHandler NearestSectors_DataSetCompleted;
        
        /// <remarks/>
        public event ByPoBoxCompletedEventHandler ByPoBoxCompleted;
        
        /// <remarks/>
        public event ByPoBox_DataSetCompletedEventHandler ByPoBox_DataSetCompleted;
        
        /// <remarks/>
        public event GeocodePostcodeCompletedEventHandler GeocodePostcodeCompleted;
        
        /// <remarks/>
        public event GeocodePostcode_DataSetCompletedEventHandler GeocodePostcode_DataSetCompleted;
        
        /// <remarks/>
        public event GeocodeAddressIdCompletedEventHandler GeocodeAddressIdCompleted;
        
        /// <remarks/>
        public event GeocodeAddressId_DataSetCompletedEventHandler GeocodeAddressId_DataSetCompleted;
        
        /// <remarks/>
        public event GeocodeAddressCompletedEventHandler GeocodeAddressCompleted;
        
        /// <remarks/>
        public event GeocodeAddress_DataSetCompletedEventHandler GeocodeAddress_DataSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Browse", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults Browse(string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Browse", new object[] {
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void BrowseAsync(string AccountCode, string LicenseKey, string MachineId) {
            this.BrowseAsync(AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void BrowseAsync(string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.BrowseOperationCompleted == null)) {
                this.BrowseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBrowseOperationCompleted);
            }
            this.InvokeAsync("Browse", new object[] {
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.BrowseOperationCompleted, userState);
        }
        
        private void OnBrowseOperationCompleted(object arg) {
            if ((this.BrowseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BrowseCompleted(this, new BrowseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Browse_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Browse_DataSet(string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Browse_DataSet", new object[] {
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Browse_DataSetAsync(string AccountCode, string LicenseKey, string MachineId) {
            this.Browse_DataSetAsync(AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void Browse_DataSetAsync(string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.Browse_DataSetOperationCompleted == null)) {
                this.Browse_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBrowse_DataSetOperationCompleted);
            }
            this.InvokeAsync("Browse_DataSet", new object[] {
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.Browse_DataSetOperationCompleted, userState);
        }
        
        private void OnBrowse_DataSetOperationCompleted(object arg) {
            if ((this.Browse_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Browse_DataSetCompleted(this, new Browse_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByArea", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByArea(string Area, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByArea", new object[] {
                        Area,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByAreaAsync(string Area, string AccountCode, string LicenseKey, string MachineId) {
            this.ByAreaAsync(Area, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByAreaAsync(string Area, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByAreaOperationCompleted == null)) {
                this.ByAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByAreaOperationCompleted);
            }
            this.InvokeAsync("ByArea", new object[] {
                        Area,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByAreaOperationCompleted, userState);
        }
        
        private void OnByAreaOperationCompleted(object arg) {
            if ((this.ByAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByAreaCompleted(this, new ByAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByArea_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByArea_DataSet(string Area, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByArea_DataSet", new object[] {
                        Area,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByArea_DataSetAsync(string Area, string AccountCode, string LicenseKey, string MachineId) {
            this.ByArea_DataSetAsync(Area, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByArea_DataSetAsync(string Area, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByArea_DataSetOperationCompleted == null)) {
                this.ByArea_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByArea_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByArea_DataSet", new object[] {
                        Area,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByArea_DataSetOperationCompleted, userState);
        }
        
        private void OnByArea_DataSetOperationCompleted(object arg) {
            if ((this.ByArea_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByArea_DataSetCompleted(this, new ByArea_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPostcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByPostcode(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPostcode", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByPostcodeAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPostcodeAsync(Postcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPostcodeAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPostcodeOperationCompleted == null)) {
                this.ByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPostcodeOperationCompleted);
            }
            this.InvokeAsync("ByPostcode", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPostcodeOperationCompleted, userState);
        }
        
        private void OnByPostcodeOperationCompleted(object arg) {
            if ((this.ByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPostcodeCompleted(this, new ByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPostcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByPostcode_DataSet(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPostcode_DataSet", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByPostcode_DataSetAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPostcode_DataSetAsync(Postcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPostcode_DataSetAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPostcode_DataSetOperationCompleted == null)) {
                this.ByPostcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPostcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByPostcode_DataSet", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPostcode_DataSetOperationCompleted, userState);
        }
        
        private void OnByPostcode_DataSetOperationCompleted(object arg) {
            if ((this.ByPostcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPostcode_DataSetCompleted(this, new ByPostcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPostcode_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByPostcode_Combined(string Postcode, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByPostcode_Combined", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByPostcode_CombinedAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByPostcode_CombinedAsync(Postcode, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByPostcode_CombinedAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByPostcode_CombinedOperationCompleted == null)) {
                this.ByPostcode_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPostcode_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByPostcode_Combined", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByPostcode_CombinedOperationCompleted, userState);
        }
        
        private void OnByPostcode_CombinedOperationCompleted(object arg) {
            if ((this.ByPostcode_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPostcode_CombinedCompleted(this, new ByPostcode_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPostcodeFiltered", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByPostcodeFiltered(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPostcodeFiltered", new object[] {
                        Postcode,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByPostcodeFilteredAsync(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPostcodeFilteredAsync(Postcode, Building, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPostcodeFilteredAsync(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPostcodeFilteredOperationCompleted == null)) {
                this.ByPostcodeFilteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPostcodeFilteredOperationCompleted);
            }
            this.InvokeAsync("ByPostcodeFiltered", new object[] {
                        Postcode,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPostcodeFilteredOperationCompleted, userState);
        }
        
        private void OnByPostcodeFilteredOperationCompleted(object arg) {
            if ((this.ByPostcodeFilteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPostcodeFilteredCompleted(this, new ByPostcodeFilteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPostcodeFiltered_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByPostcodeFiltered_DataSet(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPostcodeFiltered_DataSet", new object[] {
                        Postcode,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByPostcodeFiltered_DataSetAsync(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPostcodeFiltered_DataSetAsync(Postcode, Building, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPostcodeFiltered_DataSetAsync(string Postcode, string Building, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPostcodeFiltered_DataSetOperationCompleted == null)) {
                this.ByPostcodeFiltered_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPostcodeFiltered_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByPostcodeFiltered_DataSet", new object[] {
                        Postcode,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPostcodeFiltered_DataSetOperationCompleted, userState);
        }
        
        private void OnByPostcodeFiltered_DataSetOperationCompleted(object arg) {
            if ((this.ByPostcodeFiltered_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPostcodeFiltered_DataSetCompleted(this, new ByPostcodeFiltered_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByCoordinates", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByCoordinates(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByCoordinates", new object[] {
                        EastingMin,
                        EastingMax,
                        NorthingMin,
                        NorthingMax,
                        Options,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByCoordinatesAsync(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId) {
            this.ByCoordinatesAsync(EastingMin, EastingMax, NorthingMin, NorthingMax, Options, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByCoordinatesAsync(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByCoordinatesOperationCompleted == null)) {
                this.ByCoordinatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByCoordinatesOperationCompleted);
            }
            this.InvokeAsync("ByCoordinates", new object[] {
                        EastingMin,
                        EastingMax,
                        NorthingMin,
                        NorthingMax,
                        Options,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByCoordinatesOperationCompleted, userState);
        }
        
        private void OnByCoordinatesOperationCompleted(object arg) {
            if ((this.ByCoordinatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByCoordinatesCompleted(this, new ByCoordinatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByCoordinates_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByCoordinates_DataSet(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByCoordinates_DataSet", new object[] {
                        EastingMin,
                        EastingMax,
                        NorthingMin,
                        NorthingMax,
                        Options,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByCoordinates_DataSetAsync(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId) {
            this.ByCoordinates_DataSetAsync(EastingMin, EastingMax, NorthingMin, NorthingMax, Options, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByCoordinates_DataSetAsync(int EastingMin, int EastingMax, int NorthingMin, int NorthingMax, string Options, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByCoordinates_DataSetOperationCompleted == null)) {
                this.ByCoordinates_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByCoordinates_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByCoordinates_DataSet", new object[] {
                        EastingMin,
                        EastingMax,
                        NorthingMin,
                        NorthingMax,
                        Options,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByCoordinates_DataSetOperationCompleted, userState);
        }
        
        private void OnByCoordinates_DataSetOperationCompleted(object arg) {
            if ((this.ByCoordinates_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByCoordinates_DataSetCompleted(this, new ByCoordinates_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByOutcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByOutcode(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByOutcode", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByOutcodeAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            this.ByOutcodeAsync(Outcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByOutcodeAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByOutcodeOperationCompleted == null)) {
                this.ByOutcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByOutcodeOperationCompleted);
            }
            this.InvokeAsync("ByOutcode", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByOutcodeOperationCompleted, userState);
        }
        
        private void OnByOutcodeOperationCompleted(object arg) {
            if ((this.ByOutcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByOutcodeCompleted(this, new ByOutcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByOutcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByOutcode_DataSet(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByOutcode_DataSet", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByOutcode_DataSetAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            this.ByOutcode_DataSetAsync(Outcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByOutcode_DataSetAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByOutcode_DataSetOperationCompleted == null)) {
                this.ByOutcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByOutcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByOutcode_DataSet", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByOutcode_DataSetOperationCompleted, userState);
        }
        
        private void OnByOutcode_DataSetOperationCompleted(object arg) {
            if ((this.ByOutcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByOutcode_DataSetCompleted(this, new ByOutcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByOrganisation", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByOrganisation(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByOrganisation", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByOrganisationAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            this.ByOrganisationAsync(Organisation, Town, Fuzzy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByOrganisationAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByOrganisationOperationCompleted == null)) {
                this.ByOrganisationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByOrganisationOperationCompleted);
            }
            this.InvokeAsync("ByOrganisation", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByOrganisationOperationCompleted, userState);
        }
        
        private void OnByOrganisationOperationCompleted(object arg) {
            if ((this.ByOrganisationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByOrganisationCompleted(this, new ByOrganisationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByOrganisation_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByOrganisation_DataSet(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByOrganisation_DataSet", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByOrganisation_DataSetAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            this.ByOrganisation_DataSetAsync(Organisation, Town, Fuzzy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByOrganisation_DataSetAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByOrganisation_DataSetOperationCompleted == null)) {
                this.ByOrganisation_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByOrganisation_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByOrganisation_DataSet", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByOrganisation_DataSetOperationCompleted, userState);
        }
        
        private void OnByOrganisation_DataSetOperationCompleted(object arg) {
            if ((this.ByOrganisation_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByOrganisation_DataSetCompleted(this, new ByOrganisation_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByOrganisation_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByOrganisation_Combined(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByOrganisation_Combined", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByOrganisation_CombinedAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByOrganisation_CombinedAsync(Organisation, Town, Fuzzy, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByOrganisation_CombinedAsync(string Organisation, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByOrganisation_CombinedOperationCompleted == null)) {
                this.ByOrganisation_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByOrganisation_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByOrganisation_Combined", new object[] {
                        Organisation,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByOrganisation_CombinedOperationCompleted, userState);
        }
        
        private void OnByOrganisation_CombinedOperationCompleted(object arg) {
            if ((this.ByOrganisation_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByOrganisation_CombinedCompleted(this, new ByOrganisation_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByStreet(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreet", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreetAsync(Street, Town, Fuzzy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreetAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreetOperationCompleted == null)) {
                this.ByStreetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetOperationCompleted);
            }
            this.InvokeAsync("ByStreet", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreetOperationCompleted, userState);
        }
        
        private void OnByStreetOperationCompleted(object arg) {
            if ((this.ByStreetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetCompleted(this, new ByStreetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreet_Dataset", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByStreet_Dataset(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreet_Dataset", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreet_DatasetAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreet_DatasetAsync(Street, Town, Fuzzy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreet_DatasetAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreet_DatasetOperationCompleted == null)) {
                this.ByStreet_DatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreet_DatasetOperationCompleted);
            }
            this.InvokeAsync("ByStreet_Dataset", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreet_DatasetOperationCompleted, userState);
        }
        
        private void OnByStreet_DatasetOperationCompleted(object arg) {
            if ((this.ByStreet_DatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreet_DatasetCompleted(this, new ByStreet_DatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreetFiltered", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByStreetFiltered(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreetFiltered", new object[] {
                        Street,
                        Town,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetFilteredAsync(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreetFilteredAsync(Street, Town, Building, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreetFilteredAsync(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreetFilteredOperationCompleted == null)) {
                this.ByStreetFilteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetFilteredOperationCompleted);
            }
            this.InvokeAsync("ByStreetFiltered", new object[] {
                        Street,
                        Town,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreetFilteredOperationCompleted, userState);
        }
        
        private void OnByStreetFilteredOperationCompleted(object arg) {
            if ((this.ByStreetFilteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetFilteredCompleted(this, new ByStreetFilteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreetFiltered_Dataset", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByStreetFiltered_Dataset(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreetFiltered_Dataset", new object[] {
                        Street,
                        Town,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetFiltered_DatasetAsync(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreetFiltered_DatasetAsync(Street, Town, Building, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreetFiltered_DatasetAsync(string Street, string Town, string Building, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreetFiltered_DatasetOperationCompleted == null)) {
                this.ByStreetFiltered_DatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetFiltered_DatasetOperationCompleted);
            }
            this.InvokeAsync("ByStreetFiltered_Dataset", new object[] {
                        Street,
                        Town,
                        Building,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreetFiltered_DatasetOperationCompleted, userState);
        }
        
        private void OnByStreetFiltered_DatasetOperationCompleted(object arg) {
            if ((this.ByStreetFiltered_DatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetFiltered_DatasetCompleted(this, new ByStreetFiltered_DatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreet_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByStreet_Combined(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByStreet_Combined", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreet_CombinedAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByStreet_CombinedAsync(Street, Town, Fuzzy, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByStreet_CombinedAsync(string Street, string Town, bool Fuzzy, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByStreet_CombinedOperationCompleted == null)) {
                this.ByStreet_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreet_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByStreet_Combined", new object[] {
                        Street,
                        Town,
                        Fuzzy,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByStreet_CombinedOperationCompleted, userState);
        }
        
        private void OnByStreet_CombinedOperationCompleted(object arg) {
            if ((this.ByStreet_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreet_CombinedCompleted(this, new ByStreet_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByBuilding", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByBuilding(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByBuilding", new object[] {
                        Building,
                        Town,
                        JustBuildings,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByBuildingAsync(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId) {
            this.ByBuildingAsync(Building, Town, JustBuildings, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByBuildingAsync(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByBuildingOperationCompleted == null)) {
                this.ByBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByBuildingOperationCompleted);
            }
            this.InvokeAsync("ByBuilding", new object[] {
                        Building,
                        Town,
                        JustBuildings,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByBuildingOperationCompleted, userState);
        }
        
        private void OnByBuildingOperationCompleted(object arg) {
            if ((this.ByBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByBuildingCompleted(this, new ByBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByBuilding_Dataset", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByBuilding_Dataset(string Building, bool JustBuildings, string Town, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByBuilding_Dataset", new object[] {
                        Building,
                        JustBuildings,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByBuilding_DatasetAsync(string Building, bool JustBuildings, string Town, string AccountCode, string LicenseKey, string MachineId) {
            this.ByBuilding_DatasetAsync(Building, JustBuildings, Town, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByBuilding_DatasetAsync(string Building, bool JustBuildings, string Town, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByBuilding_DatasetOperationCompleted == null)) {
                this.ByBuilding_DatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByBuilding_DatasetOperationCompleted);
            }
            this.InvokeAsync("ByBuilding_Dataset", new object[] {
                        Building,
                        JustBuildings,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByBuilding_DatasetOperationCompleted, userState);
        }
        
        private void OnByBuilding_DatasetOperationCompleted(object arg) {
            if ((this.ByBuilding_DatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByBuilding_DatasetCompleted(this, new ByBuilding_DatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByBuilding_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByBuilding_Combined(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByBuilding_Combined", new object[] {
                        Building,
                        Town,
                        JustBuildings,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByBuilding_CombinedAsync(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByBuilding_CombinedAsync(Building, Town, JustBuildings, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByBuilding_CombinedAsync(string Building, string Town, bool JustBuildings, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByBuilding_CombinedOperationCompleted == null)) {
                this.ByBuilding_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByBuilding_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByBuilding_Combined", new object[] {
                        Building,
                        Town,
                        JustBuildings,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByBuilding_CombinedOperationCompleted, userState);
        }
        
        private void OnByBuilding_CombinedOperationCompleted(object arg) {
            if ((this.ByBuilding_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByBuilding_CombinedCompleted(this, new ByBuilding_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreetKey", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByStreetKey(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreetKey", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetKeyAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreetKeyAsync(StreetKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreetKeyAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreetKeyOperationCompleted == null)) {
                this.ByStreetKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetKeyOperationCompleted);
            }
            this.InvokeAsync("ByStreetKey", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreetKeyOperationCompleted, userState);
        }
        
        private void OnByStreetKeyOperationCompleted(object arg) {
            if ((this.ByStreetKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetKeyCompleted(this, new ByStreetKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreetKey_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByStreetKey_DataSet(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByStreetKey_DataSet", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetKey_DataSetAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            this.ByStreetKey_DataSetAsync(StreetKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByStreetKey_DataSetAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByStreetKey_DataSetOperationCompleted == null)) {
                this.ByStreetKey_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetKey_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByStreetKey_DataSet", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByStreetKey_DataSetOperationCompleted, userState);
        }
        
        private void OnByStreetKey_DataSetOperationCompleted(object arg) {
            if ((this.ByStreetKey_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetKey_DataSetCompleted(this, new ByStreetKey_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByStreetKey_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByStreetKey_Combined(string StreetKey, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByStreetKey_Combined", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByStreetKey_CombinedAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByStreetKey_CombinedAsync(StreetKey, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByStreetKey_CombinedAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByStreetKey_CombinedOperationCompleted == null)) {
                this.ByStreetKey_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByStreetKey_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByStreetKey_Combined", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByStreetKey_CombinedOperationCompleted, userState);
        }
        
        private void OnByStreetKey_CombinedOperationCompleted(object arg) {
            if ((this.ByStreetKey_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByStreetKey_CombinedCompleted(this, new ByStreetKey_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByLocalityKey", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByLocalityKey(string LocalityKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByLocalityKey", new object[] {
                        LocalityKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByLocalityKeyAsync(string LocalityKey, string AccountCode, string LicenseKey, string MachineId) {
            this.ByLocalityKeyAsync(LocalityKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByLocalityKeyAsync(string LocalityKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByLocalityKeyOperationCompleted == null)) {
                this.ByLocalityKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByLocalityKeyOperationCompleted);
            }
            this.InvokeAsync("ByLocalityKey", new object[] {
                        LocalityKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByLocalityKeyOperationCompleted, userState);
        }
        
        private void OnByLocalityKeyOperationCompleted(object arg) {
            if ((this.ByLocalityKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByLocalityKeyCompleted(this, new ByLocalityKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByLocalityKey_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByLocalityKey_DataSet(string LocalityKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByLocalityKey_DataSet", new object[] {
                        LocalityKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByLocalityKey_DataSetAsync(string LocalityKey, string AccountCode, string LicenseKey, string MachineId) {
            this.ByLocalityKey_DataSetAsync(LocalityKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByLocalityKey_DataSetAsync(string LocalityKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByLocalityKey_DataSetOperationCompleted == null)) {
                this.ByLocalityKey_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByLocalityKey_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByLocalityKey_DataSet", new object[] {
                        LocalityKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByLocalityKey_DataSetOperationCompleted, userState);
        }
        
        private void OnByLocalityKey_DataSetOperationCompleted(object arg) {
            if ((this.ByLocalityKey_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByLocalityKey_DataSetCompleted(this, new ByLocalityKey_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByLocation", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByLocation(string Location, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByLocation", new object[] {
                        Location,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByLocationAsync(string Location, string AccountCode, string LicenseKey, string MachineId) {
            this.ByLocationAsync(Location, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByLocationAsync(string Location, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByLocationOperationCompleted == null)) {
                this.ByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByLocationOperationCompleted);
            }
            this.InvokeAsync("ByLocation", new object[] {
                        Location,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByLocationOperationCompleted, userState);
        }
        
        private void OnByLocationOperationCompleted(object arg) {
            if ((this.ByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByLocationCompleted(this, new ByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByLocation_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByLocation_DataSet(string Location, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByLocation_DataSet", new object[] {
                        Location,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByLocation_DataSetAsync(string Location, string AccountCode, string LicenseKey, string MachineId) {
            this.ByLocation_DataSetAsync(Location, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByLocation_DataSetAsync(string Location, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByLocation_DataSetOperationCompleted == null)) {
                this.ByLocation_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByLocation_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByLocation_DataSet", new object[] {
                        Location,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByLocation_DataSetOperationCompleted, userState);
        }
        
        private void OnByLocation_DataSetOperationCompleted(object arg) {
            if ((this.ByLocation_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByLocation_DataSetCompleted(this, new ByLocation_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Location", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationResults Location(string Id, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Location", new object[] {
                        Id,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((LocationResults)(results[0]));
        }
        
        /// <remarks/>
        public void LocationAsync(string Id, string AccountCode, string LicenseKey, string MachineId) {
            this.LocationAsync(Id, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void LocationAsync(string Id, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.LocationOperationCompleted == null)) {
                this.LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationOperationCompleted);
            }
            this.InvokeAsync("Location", new object[] {
                        Id,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.LocationOperationCompleted, userState);
        }
        
        private void OnLocationOperationCompleted(object arg) {
            if ((this.LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationCompleted(this, new LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Location_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Location_DataSet(string Id, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Location_DataSet", new object[] {
                        Id,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Location_DataSetAsync(string Id, string AccountCode, string LicenseKey, string MachineId) {
            this.Location_DataSetAsync(Id, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void Location_DataSetAsync(string Id, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.Location_DataSetOperationCompleted == null)) {
                this.Location_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocation_DataSetOperationCompleted);
            }
            this.InvokeAsync("Location_DataSet", new object[] {
                        Id,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.Location_DataSetOperationCompleted, userState);
        }
        
        private void OnLocation_DataSetOperationCompleted(object arg) {
            if ((this.Location_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Location_DataSetCompleted(this, new Location_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByFreeText", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByFreeText(string FreeText, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByFreeText", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByFreeTextAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId) {
            this.ByFreeTextAsync(FreeText, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByFreeTextAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByFreeTextOperationCompleted == null)) {
                this.ByFreeTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByFreeTextOperationCompleted);
            }
            this.InvokeAsync("ByFreeText", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByFreeTextOperationCompleted, userState);
        }
        
        private void OnByFreeTextOperationCompleted(object arg) {
            if ((this.ByFreeTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByFreeTextCompleted(this, new ByFreeTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByFreeText_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByFreeText_DataSet(string FreeText, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByFreeText_DataSet", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByFreeText_DataSetAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId) {
            this.ByFreeText_DataSetAsync(FreeText, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByFreeText_DataSetAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByFreeText_DataSetOperationCompleted == null)) {
                this.ByFreeText_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByFreeText_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByFreeText_DataSet", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByFreeText_DataSetOperationCompleted, userState);
        }
        
        private void OnByFreeText_DataSetOperationCompleted(object arg) {
            if ((this.ByFreeText_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByFreeText_DataSetCompleted(this, new ByFreeText_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByFreeText_Combined", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CombinedResults ByFreeText_Combined(string FreeText, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            object[] results = this.Invoke("ByFreeText_Combined", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType});
            return ((CombinedResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByFreeText_CombinedAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType) {
            this.ByFreeText_CombinedAsync(FreeText, AccountCode, LicenseKey, MachineId, Language, ContentType, null);
        }
        
        /// <remarks/>
        public void ByFreeText_CombinedAsync(string FreeText, string AccountCode, string LicenseKey, string MachineId, enLanguage Language, enContentType ContentType, object userState) {
            if ((this.ByFreeText_CombinedOperationCompleted == null)) {
                this.ByFreeText_CombinedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByFreeText_CombinedOperationCompleted);
            }
            this.InvokeAsync("ByFreeText_Combined", new object[] {
                        FreeText,
                        AccountCode,
                        LicenseKey,
                        MachineId,
                        Language,
                        ContentType}, this.ByFreeText_CombinedOperationCompleted, userState);
        }
        
        private void OnByFreeText_CombinedOperationCompleted(object arg) {
            if ((this.ByFreeText_CombinedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByFreeText_CombinedCompleted(this, new ByFreeText_CombinedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/FetchAddress_Simple", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResults FetchAddress_Simple(string Id, string Language, string ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("FetchAddress_Simple", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((AddressResults)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAddress_SimpleAsync(string Id, string Language, string ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.FetchAddress_SimpleAsync(Id, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void FetchAddress_SimpleAsync(string Id, string Language, string ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.FetchAddress_SimpleOperationCompleted == null)) {
                this.FetchAddress_SimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAddress_SimpleOperationCompleted);
            }
            this.InvokeAsync("FetchAddress_Simple", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.FetchAddress_SimpleOperationCompleted, userState);
        }
        
        private void OnFetchAddress_SimpleOperationCompleted(object arg) {
            if ((this.FetchAddress_SimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAddress_SimpleCompleted(this, new FetchAddress_SimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/FetchAddress", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResults FetchAddress(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("FetchAddress", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((AddressResults)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAddressAsync(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.FetchAddressAsync(Id, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void FetchAddressAsync(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.FetchAddressOperationCompleted == null)) {
                this.FetchAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAddressOperationCompleted);
            }
            this.InvokeAsync("FetchAddress", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.FetchAddressOperationCompleted, userState);
        }
        
        private void OnFetchAddressOperationCompleted(object arg) {
            if ((this.FetchAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAddressCompleted(this, new FetchAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/FastAddress", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResults FastAddress(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("FastAddress", new object[] {
                        Postcode,
                        Building,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((AddressResults)(results[0]));
        }
        
        /// <remarks/>
        public void FastAddressAsync(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.FastAddressAsync(Postcode, Building, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void FastAddressAsync(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.FastAddressOperationCompleted == null)) {
                this.FastAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFastAddressOperationCompleted);
            }
            this.InvokeAsync("FastAddress", new object[] {
                        Postcode,
                        Building,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.FastAddressOperationCompleted, userState);
        }
        
        private void OnFastAddressOperationCompleted(object arg) {
            if ((this.FastAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FastAddressCompleted(this, new FastAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/FetchAddress_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchAddress_DataSet(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("FetchAddress_DataSet", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAddress_DataSetAsync(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.FetchAddress_DataSetAsync(Id, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void FetchAddress_DataSetAsync(string Id, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.FetchAddress_DataSetOperationCompleted == null)) {
                this.FetchAddress_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAddress_DataSetOperationCompleted);
            }
            this.InvokeAsync("FetchAddress_DataSet", new object[] {
                        Id,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.FetchAddress_DataSetOperationCompleted, userState);
        }
        
        private void OnFetchAddress_DataSetOperationCompleted(object arg) {
            if ((this.FetchAddress_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAddress_DataSetCompleted(this, new FetchAddress_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/FastAddress_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FastAddress_DataSet(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("FastAddress_DataSet", new object[] {
                        Postcode,
                        Building,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FastAddress_DataSetAsync(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.FastAddress_DataSetAsync(Postcode, Building, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void FastAddress_DataSetAsync(string Postcode, string Building, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.FastAddress_DataSetOperationCompleted == null)) {
                this.FastAddress_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFastAddress_DataSetOperationCompleted);
            }
            this.InvokeAsync("FastAddress_DataSet", new object[] {
                        Postcode,
                        Building,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.FastAddress_DataSetOperationCompleted, userState);
        }
        
        private void OnFastAddress_DataSetOperationCompleted(object arg) {
            if ((this.FastAddress_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FastAddress_DataSetCompleted(this, new FastAddress_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Distance", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double Distance(string Origin, string Destination, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Distance", new object[] {
                        Origin,
                        Destination,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void DistanceAsync(string Origin, string Destination, string AccountCode, string LicenseKey, string MachineId) {
            this.DistanceAsync(Origin, Destination, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void DistanceAsync(string Origin, string Destination, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.DistanceOperationCompleted == null)) {
                this.DistanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDistanceOperationCompleted);
            }
            this.InvokeAsync("Distance", new object[] {
                        Origin,
                        Destination,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.DistanceOperationCompleted, userState);
        }
        
        private void OnDistanceOperationCompleted(object arg) {
            if ((this.DistanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DistanceCompleted(this, new DistanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestPostcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults NearestPostcode(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestPostcode", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void NearestPostcodeAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestPostcodeAsync(Easting, Northing, Latitude, Longitude, Datum, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestPostcodeAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestPostcodeOperationCompleted == null)) {
                this.NearestPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestPostcodeOperationCompleted);
            }
            this.InvokeAsync("NearestPostcode", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestPostcodeOperationCompleted, userState);
        }
        
        private void OnNearestPostcodeOperationCompleted(object arg) {
            if ((this.NearestPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestPostcodeCompleted(this, new NearestPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestPostcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NearestPostcode_DataSet(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestPostcode_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NearestPostcode_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestPostcode_DataSetAsync(Easting, Northing, Latitude, Longitude, Datum, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestPostcode_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestPostcode_DataSetOperationCompleted == null)) {
                this.NearestPostcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestPostcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("NearestPostcode_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestPostcode_DataSetOperationCompleted, userState);
        }
        
        private void OnNearestPostcode_DataSetOperationCompleted(object arg) {
            if ((this.NearestPostcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestPostcode_DataSetCompleted(this, new NearestPostcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Nearest", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults Nearest(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Nearest", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void NearestAsync(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestAsync(Origin, Destinations, Units, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestAsync(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestOperationCompleted == null)) {
                this.NearestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestOperationCompleted);
            }
            this.InvokeAsync("Nearest", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestOperationCompleted, userState);
        }
        
        private void OnNearestOperationCompleted(object arg) {
            if ((this.NearestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestCompleted(this, new NearestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Nearest_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Nearest_DataSet(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Nearest_DataSet", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Nearest_DataSetAsync(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.Nearest_DataSetAsync(Origin, Destinations, Units, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void Nearest_DataSetAsync(string Origin, string[] Destinations, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.Nearest_DataSetOperationCompleted == null)) {
                this.Nearest_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearest_DataSetOperationCompleted);
            }
            this.InvokeAsync("Nearest_DataSet", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.Nearest_DataSetOperationCompleted, userState);
        }
        
        private void OnNearest_DataSetOperationCompleted(object arg) {
            if ((this.Nearest_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Nearest_DataSetCompleted(this, new Nearest_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StoredNearest", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults StoredNearest(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StoredNearest", new object[] {
                        Origin,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void StoredNearestAsync(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.StoredNearestAsync(Origin, Units, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StoredNearestAsync(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StoredNearestOperationCompleted == null)) {
                this.StoredNearestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredNearestOperationCompleted);
            }
            this.InvokeAsync("StoredNearest", new object[] {
                        Origin,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StoredNearestOperationCompleted, userState);
        }
        
        private void OnStoredNearestOperationCompleted(object arg) {
            if ((this.StoredNearestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredNearestCompleted(this, new StoredNearestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StoredNearest_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StoredNearest_DataSet(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StoredNearest_DataSet", new object[] {
                        Origin,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StoredNearest_DataSetAsync(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.StoredNearest_DataSetAsync(Origin, Units, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StoredNearest_DataSetAsync(string Origin, enUnitType Units, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StoredNearest_DataSetOperationCompleted == null)) {
                this.StoredNearest_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredNearest_DataSetOperationCompleted);
            }
            this.InvokeAsync("StoredNearest_DataSet", new object[] {
                        Origin,
                        Units,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StoredNearest_DataSetOperationCompleted, userState);
        }
        
        private void OnStoredNearest_DataSetOperationCompleted(object arg) {
            if ((this.StoredNearest_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredNearest_DataSetCompleted(this, new StoredNearest_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestRadial", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults NearestRadial(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestRadial", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void NearestRadialAsync(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestRadialAsync(Origin, Destinations, Units, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestRadialAsync(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestRadialOperationCompleted == null)) {
                this.NearestRadialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestRadialOperationCompleted);
            }
            this.InvokeAsync("NearestRadial", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestRadialOperationCompleted, userState);
        }
        
        private void OnNearestRadialOperationCompleted(object arg) {
            if ((this.NearestRadialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestRadialCompleted(this, new NearestRadialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestRadial_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NearestRadial_DataSet(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestRadial_DataSet", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NearestRadial_DataSetAsync(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestRadial_DataSetAsync(Origin, Destinations, Units, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestRadial_DataSetAsync(string Origin, string[] Destinations, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestRadial_DataSetOperationCompleted == null)) {
                this.NearestRadial_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestRadial_DataSetOperationCompleted);
            }
            this.InvokeAsync("NearestRadial_DataSet", new object[] {
                        Origin,
                        Destinations,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestRadial_DataSetOperationCompleted, userState);
        }
        
        private void OnNearestRadial_DataSetOperationCompleted(object arg) {
            if ((this.NearestRadial_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestRadial_DataSetCompleted(this, new NearestRadial_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StoredNearestRadial", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults StoredNearestRadial(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StoredNearestRadial", new object[] {
                        Origin,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void StoredNearestRadialAsync(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.StoredNearestRadialAsync(Origin, Units, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StoredNearestRadialAsync(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StoredNearestRadialOperationCompleted == null)) {
                this.StoredNearestRadialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredNearestRadialOperationCompleted);
            }
            this.InvokeAsync("StoredNearestRadial", new object[] {
                        Origin,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StoredNearestRadialOperationCompleted, userState);
        }
        
        private void OnStoredNearestRadialOperationCompleted(object arg) {
            if ((this.StoredNearestRadialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredNearestRadialCompleted(this, new StoredNearestRadialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StoredNearestRadial_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StoredNearestRadial_DataSet(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StoredNearestRadial_DataSet", new object[] {
                        Origin,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StoredNearestRadial_DataSetAsync(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.StoredNearestRadial_DataSetAsync(Origin, Units, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StoredNearestRadial_DataSetAsync(string Origin, enUnitType Units, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StoredNearestRadial_DataSetOperationCompleted == null)) {
                this.StoredNearestRadial_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredNearestRadial_DataSetOperationCompleted);
            }
            this.InvokeAsync("StoredNearestRadial_DataSet", new object[] {
                        Origin,
                        Units,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StoredNearestRadial_DataSetOperationCompleted, userState);
        }
        
        private void OnStoredNearestRadial_DataSetOperationCompleted(object arg) {
            if ((this.StoredNearestRadial_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredNearestRadial_DataSetCompleted(this, new StoredNearestRadial_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Changes", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangesResults Changes(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Changes", new object[] {
                        StartDate,
                        EndDate,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((ChangesResults)(results[0]));
        }
        
        /// <remarks/>
        public void ChangesAsync(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId) {
            this.ChangesAsync(StartDate, EndDate, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ChangesAsync(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ChangesOperationCompleted == null)) {
                this.ChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangesOperationCompleted);
            }
            this.InvokeAsync("Changes", new object[] {
                        StartDate,
                        EndDate,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ChangesOperationCompleted, userState);
        }
        
        private void OnChangesOperationCompleted(object arg) {
            if ((this.ChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangesCompleted(this, new ChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Changes_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Changes_DataSet(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Changes_DataSet", new object[] {
                        StartDate,
                        EndDate,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Changes_DataSetAsync(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId) {
            this.Changes_DataSetAsync(StartDate, EndDate, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void Changes_DataSetAsync(System.DateTime StartDate, string EndDate, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.Changes_DataSetOperationCompleted == null)) {
                this.Changes_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChanges_DataSetOperationCompleted);
            }
            this.InvokeAsync("Changes_DataSet", new object[] {
                        StartDate,
                        EndDate,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.Changes_DataSetOperationCompleted, userState);
        }
        
        private void OnChanges_DataSetOperationCompleted(object arg) {
            if ((this.Changes_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Changes_DataSetCompleted(this, new Changes_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Cleanse", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CleanseResults Cleanse(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Cleanse", new object[] {
                        Postcode,
                        Street,
                        Organisation,
                        Building,
                        Town,
                        Address,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((CleanseResults)(results[0]));
        }
        
        /// <remarks/>
        public void CleanseAsync(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId) {
            this.CleanseAsync(Postcode, Street, Organisation, Building, Town, Address, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void CleanseAsync(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.CleanseOperationCompleted == null)) {
                this.CleanseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanseOperationCompleted);
            }
            this.InvokeAsync("Cleanse", new object[] {
                        Postcode,
                        Street,
                        Organisation,
                        Building,
                        Town,
                        Address,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.CleanseOperationCompleted, userState);
        }
        
        private void OnCleanseOperationCompleted(object arg) {
            if ((this.CleanseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanseCompleted(this, new CleanseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/Cleanse_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Cleanse_DataSet(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("Cleanse_DataSet", new object[] {
                        Postcode,
                        Street,
                        Organisation,
                        Building,
                        Town,
                        Address,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Cleanse_DataSetAsync(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId) {
            this.Cleanse_DataSetAsync(Postcode, Street, Organisation, Building, Town, Address, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void Cleanse_DataSetAsync(string Postcode, string Street, string Organisation, string Building, string Town, string Address, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.Cleanse_DataSetOperationCompleted == null)) {
                this.Cleanse_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanse_DataSetOperationCompleted);
            }
            this.InvokeAsync("Cleanse_DataSet", new object[] {
                        Postcode,
                        Street,
                        Organisation,
                        Building,
                        Town,
                        Address,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.Cleanse_DataSetOperationCompleted, userState);
        }
        
        private void OnCleanse_DataSetOperationCompleted(object arg) {
            if ((this.Cleanse_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cleanse_DataSetCompleted(this, new Cleanse_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/BatchCleanse", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResults BatchCleanse(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("BatchCleanse", new object[] {
                        Addresses,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((AddressResults)(results[0]));
        }
        
        /// <remarks/>
        public void BatchCleanseAsync(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.BatchCleanseAsync(Addresses, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void BatchCleanseAsync(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.BatchCleanseOperationCompleted == null)) {
                this.BatchCleanseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchCleanseOperationCompleted);
            }
            this.InvokeAsync("BatchCleanse", new object[] {
                        Addresses,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.BatchCleanseOperationCompleted, userState);
        }
        
        private void OnBatchCleanseOperationCompleted(object arg) {
            if ((this.BatchCleanseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchCleanseCompleted(this, new BatchCleanseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/BatchCleanse_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchCleanse_DataSet(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("BatchCleanse_DataSet", new object[] {
                        Addresses,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchCleanse_DataSetAsync(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.BatchCleanse_DataSetAsync(Addresses, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void BatchCleanse_DataSetAsync(string[] Addresses, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.BatchCleanse_DataSetOperationCompleted == null)) {
                this.BatchCleanse_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchCleanse_DataSetOperationCompleted);
            }
            this.InvokeAsync("BatchCleanse_DataSet", new object[] {
                        Addresses,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.BatchCleanse_DataSetOperationCompleted, userState);
        }
        
        private void OnBatchCleanse_DataSetOperationCompleted(object arg) {
            if ((this.BatchCleanse_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchCleanse_DataSetCompleted(this, new BatchCleanse_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/BatchFetch", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResults BatchFetch(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("BatchFetch", new object[] {
                        IDs,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((AddressResults)(results[0]));
        }
        
        /// <remarks/>
        public void BatchFetchAsync(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.BatchFetchAsync(IDs, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void BatchFetchAsync(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.BatchFetchOperationCompleted == null)) {
                this.BatchFetchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchFetchOperationCompleted);
            }
            this.InvokeAsync("BatchFetch", new object[] {
                        IDs,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.BatchFetchOperationCompleted, userState);
        }
        
        private void OnBatchFetchOperationCompleted(object arg) {
            if ((this.BatchFetchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchFetchCompleted(this, new BatchFetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/BatchFetch_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchFetch_DataSet(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("BatchFetch_DataSet", new object[] {
                        IDs,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchFetch_DataSetAsync(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId) {
            this.BatchFetch_DataSetAsync(IDs, Language, ContentType, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void BatchFetch_DataSetAsync(string[] IDs, enLanguage Language, enContentType ContentType, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.BatchFetch_DataSetOperationCompleted == null)) {
                this.BatchFetch_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchFetch_DataSetOperationCompleted);
            }
            this.InvokeAsync("BatchFetch_DataSet", new object[] {
                        IDs,
                        Language,
                        ContentType,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.BatchFetch_DataSetOperationCompleted, userState);
        }
        
        private void OnBatchFetch_DataSetOperationCompleted(object arg) {
            if ((this.BatchFetch_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchFetch_DataSetCompleted(this, new BatchFetch_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByPostcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResults StatisticsByPostcode(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByPostcode", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((StatisticsResults)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByPostcodeAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByPostcodeAsync(Postcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByPostcodeAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByPostcodeOperationCompleted == null)) {
                this.StatisticsByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByPostcodeOperationCompleted);
            }
            this.InvokeAsync("StatisticsByPostcode", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByPostcodeOperationCompleted, userState);
        }
        
        private void OnStatisticsByPostcodeOperationCompleted(object arg) {
            if ((this.StatisticsByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByPostcodeCompleted(this, new StatisticsByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByPostcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatisticsByPostcode_DataSet(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByPostcode_DataSet", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByPostcode_DataSetAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByPostcode_DataSetAsync(Postcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByPostcode_DataSetAsync(string Postcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByPostcode_DataSetOperationCompleted == null)) {
                this.StatisticsByPostcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByPostcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("StatisticsByPostcode_DataSet", new object[] {
                        Postcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByPostcode_DataSetOperationCompleted, userState);
        }
        
        private void OnStatisticsByPostcode_DataSetOperationCompleted(object arg) {
            if ((this.StatisticsByPostcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByPostcode_DataSetCompleted(this, new StatisticsByPostcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByOutcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResults StatisticsByOutcode(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByOutcode", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((StatisticsResults)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByOutcodeAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByOutcodeAsync(Outcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByOutcodeAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByOutcodeOperationCompleted == null)) {
                this.StatisticsByOutcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByOutcodeOperationCompleted);
            }
            this.InvokeAsync("StatisticsByOutcode", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByOutcodeOperationCompleted, userState);
        }
        
        private void OnStatisticsByOutcodeOperationCompleted(object arg) {
            if ((this.StatisticsByOutcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByOutcodeCompleted(this, new StatisticsByOutcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByOutcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatisticsByOutcode_DataSet(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByOutcode_DataSet", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByOutcode_DataSetAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByOutcode_DataSetAsync(Outcode, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByOutcode_DataSetAsync(string Outcode, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByOutcode_DataSetOperationCompleted == null)) {
                this.StatisticsByOutcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByOutcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("StatisticsByOutcode_DataSet", new object[] {
                        Outcode,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByOutcode_DataSetOperationCompleted, userState);
        }
        
        private void OnStatisticsByOutcode_DataSetOperationCompleted(object arg) {
            if ((this.StatisticsByOutcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByOutcode_DataSetCompleted(this, new StatisticsByOutcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsBySector", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResults StatisticsBySector(string Sector, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsBySector", new object[] {
                        Sector,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((StatisticsResults)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsBySectorAsync(string Sector, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsBySectorAsync(Sector, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsBySectorAsync(string Sector, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsBySectorOperationCompleted == null)) {
                this.StatisticsBySectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsBySectorOperationCompleted);
            }
            this.InvokeAsync("StatisticsBySector", new object[] {
                        Sector,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsBySectorOperationCompleted, userState);
        }
        
        private void OnStatisticsBySectorOperationCompleted(object arg) {
            if ((this.StatisticsBySectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsBySectorCompleted(this, new StatisticsBySectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsBySector_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatisticsBySector_DataSet(string Sector, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsBySector_DataSet", new object[] {
                        Sector,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsBySector_DataSetAsync(string Sector, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsBySector_DataSetAsync(Sector, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsBySector_DataSetAsync(string Sector, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsBySector_DataSetOperationCompleted == null)) {
                this.StatisticsBySector_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsBySector_DataSetOperationCompleted);
            }
            this.InvokeAsync("StatisticsBySector_DataSet", new object[] {
                        Sector,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsBySector_DataSetOperationCompleted, userState);
        }
        
        private void OnStatisticsBySector_DataSetOperationCompleted(object arg) {
            if ((this.StatisticsBySector_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsBySector_DataSetCompleted(this, new StatisticsBySector_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByStreetKey", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatisticsResults StatisticsByStreetKey(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByStreetKey", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((StatisticsResults)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByStreetKeyAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByStreetKeyAsync(StreetKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByStreetKeyAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByStreetKeyOperationCompleted == null)) {
                this.StatisticsByStreetKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByStreetKeyOperationCompleted);
            }
            this.InvokeAsync("StatisticsByStreetKey", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByStreetKeyOperationCompleted, userState);
        }
        
        private void OnStatisticsByStreetKeyOperationCompleted(object arg) {
            if ((this.StatisticsByStreetKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByStreetKeyCompleted(this, new StatisticsByStreetKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/StatisticsByStreetKey_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatisticsByStreetKey_DataSet(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("StatisticsByStreetKey_DataSet", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatisticsByStreetKey_DataSetAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId) {
            this.StatisticsByStreetKey_DataSetAsync(StreetKey, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void StatisticsByStreetKey_DataSetAsync(string StreetKey, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.StatisticsByStreetKey_DataSetOperationCompleted == null)) {
                this.StatisticsByStreetKey_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatisticsByStreetKey_DataSetOperationCompleted);
            }
            this.InvokeAsync("StatisticsByStreetKey_DataSet", new object[] {
                        StreetKey,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.StatisticsByStreetKey_DataSetOperationCompleted, userState);
        }
        
        private void OnStatisticsByStreetKey_DataSetOperationCompleted(object arg) {
            if ((this.StatisticsByStreetKey_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatisticsByStreetKey_DataSetCompleted(this, new StatisticsByStreetKey_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestOutcodes", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults NearestOutcodes(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestOutcodes", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void NearestOutcodesAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestOutcodesAsync(Easting, Northing, Latitude, Longitude, Datum, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestOutcodesAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestOutcodesOperationCompleted == null)) {
                this.NearestOutcodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestOutcodesOperationCompleted);
            }
            this.InvokeAsync("NearestOutcodes", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestOutcodesOperationCompleted, userState);
        }
        
        private void OnNearestOutcodesOperationCompleted(object arg) {
            if ((this.NearestOutcodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestOutcodesCompleted(this, new NearestOutcodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestOutcodes_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NearestOutcodes_DataSet(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestOutcodes_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NearestOutcodes_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestOutcodes_DataSetAsync(Easting, Northing, Latitude, Longitude, Datum, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestOutcodes_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestOutcodes_DataSetOperationCompleted == null)) {
                this.NearestOutcodes_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestOutcodes_DataSetOperationCompleted);
            }
            this.InvokeAsync("NearestOutcodes_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestOutcodes_DataSetOperationCompleted, userState);
        }
        
        private void OnNearestOutcodes_DataSetOperationCompleted(object arg) {
            if ((this.NearestOutcodes_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestOutcodes_DataSetCompleted(this, new NearestOutcodes_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestSectors", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NearestResults NearestSectors(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestSectors", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((NearestResults)(results[0]));
        }
        
        /// <remarks/>
        public void NearestSectorsAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestSectorsAsync(Easting, Northing, Latitude, Longitude, Datum, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestSectorsAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestSectorsOperationCompleted == null)) {
                this.NearestSectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestSectorsOperationCompleted);
            }
            this.InvokeAsync("NearestSectors", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestSectorsOperationCompleted, userState);
        }
        
        private void OnNearestSectorsOperationCompleted(object arg) {
            if ((this.NearestSectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestSectorsCompleted(this, new NearestSectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/NearestSectors_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NearestSectors_DataSet(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("NearestSectors_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NearestSectors_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId) {
            this.NearestSectors_DataSetAsync(Easting, Northing, Latitude, Longitude, Datum, Radius, Items, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void NearestSectors_DataSetAsync(int Easting, int Northing, double Latitude, double Longitude, enDatum Datum, int Radius, int Items, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.NearestSectors_DataSetOperationCompleted == null)) {
                this.NearestSectors_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNearestSectors_DataSetOperationCompleted);
            }
            this.InvokeAsync("NearestSectors_DataSet", new object[] {
                        Easting,
                        Northing,
                        Latitude,
                        Longitude,
                        Datum,
                        Radius,
                        Items,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.NearestSectors_DataSetOperationCompleted, userState);
        }
        
        private void OnNearestSectors_DataSetOperationCompleted(object arg) {
            if ((this.NearestSectors_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NearestSectors_DataSetCompleted(this, new NearestSectors_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPoBox", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InterimResults ByPoBox(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPoBox", new object[] {
                        PoBox,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((InterimResults)(results[0]));
        }
        
        /// <remarks/>
        public void ByPoBoxAsync(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPoBoxAsync(PoBox, Town, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPoBoxAsync(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPoBoxOperationCompleted == null)) {
                this.ByPoBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPoBoxOperationCompleted);
            }
            this.InvokeAsync("ByPoBox", new object[] {
                        PoBox,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPoBoxOperationCompleted, userState);
        }
        
        private void OnByPoBoxOperationCompleted(object arg) {
            if ((this.ByPoBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPoBoxCompleted(this, new ByPoBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/ByPoBox_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ByPoBox_DataSet(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("ByPoBox_DataSet", new object[] {
                        PoBox,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ByPoBox_DataSetAsync(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId) {
            this.ByPoBox_DataSetAsync(PoBox, Town, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void ByPoBox_DataSetAsync(string PoBox, string Town, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.ByPoBox_DataSetOperationCompleted == null)) {
                this.ByPoBox_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByPoBox_DataSetOperationCompleted);
            }
            this.InvokeAsync("ByPoBox_DataSet", new object[] {
                        PoBox,
                        Town,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.ByPoBox_DataSetOperationCompleted, userState);
        }
        
        private void OnByPoBox_DataSetOperationCompleted(object arg) {
            if ((this.ByPoBox_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByPoBox_DataSetCompleted(this, new ByPoBox_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodePostcode", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeocodeResults GeocodePostcode(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodePostcode", new object[] {
                        Postcode,
                        Building,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((GeocodeResults)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodePostcodeAsync(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodePostcodeAsync(Postcode, Building, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodePostcodeAsync(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodePostcodeOperationCompleted == null)) {
                this.GeocodePostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodePostcodeOperationCompleted);
            }
            this.InvokeAsync("GeocodePostcode", new object[] {
                        Postcode,
                        Building,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodePostcodeOperationCompleted, userState);
        }
        
        private void OnGeocodePostcodeOperationCompleted(object arg) {
            if ((this.GeocodePostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodePostcodeCompleted(this, new GeocodePostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodePostcode_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GeocodePostcode_DataSet(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodePostcode_DataSet", new object[] {
                        Postcode,
                        Building,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodePostcode_DataSetAsync(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodePostcode_DataSetAsync(Postcode, Building, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodePostcode_DataSetAsync(string Postcode, string Building, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodePostcode_DataSetOperationCompleted == null)) {
                this.GeocodePostcode_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodePostcode_DataSetOperationCompleted);
            }
            this.InvokeAsync("GeocodePostcode_DataSet", new object[] {
                        Postcode,
                        Building,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodePostcode_DataSetOperationCompleted, userState);
        }
        
        private void OnGeocodePostcode_DataSetOperationCompleted(object arg) {
            if ((this.GeocodePostcode_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodePostcode_DataSetCompleted(this, new GeocodePostcode_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodeAddressId", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeocodeResults GeocodeAddressId(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodeAddressId", new object[] {
                        Id,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((GeocodeResults)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodeAddressIdAsync(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodeAddressIdAsync(Id, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodeAddressIdAsync(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodeAddressIdOperationCompleted == null)) {
                this.GeocodeAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodeAddressIdOperationCompleted);
            }
            this.InvokeAsync("GeocodeAddressId", new object[] {
                        Id,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodeAddressIdOperationCompleted, userState);
        }
        
        private void OnGeocodeAddressIdOperationCompleted(object arg) {
            if ((this.GeocodeAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodeAddressIdCompleted(this, new GeocodeAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodeAddressId_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GeocodeAddressId_DataSet(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodeAddressId_DataSet", new object[] {
                        Id,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodeAddressId_DataSetAsync(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodeAddressId_DataSetAsync(Id, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodeAddressId_DataSetAsync(string Id, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodeAddressId_DataSetOperationCompleted == null)) {
                this.GeocodeAddressId_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodeAddressId_DataSetOperationCompleted);
            }
            this.InvokeAsync("GeocodeAddressId_DataSet", new object[] {
                        Id,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodeAddressId_DataSetOperationCompleted, userState);
        }
        
        private void OnGeocodeAddressId_DataSetOperationCompleted(object arg) {
            if ((this.GeocodeAddressId_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodeAddressId_DataSetCompleted(this, new GeocodeAddressId_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodeAddress", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeocodeResults GeocodeAddress(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodeAddress", new object[] {
                        Address,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((GeocodeResults)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodeAddressAsync(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodeAddressAsync(Address, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodeAddressAsync(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodeAddressOperationCompleted == null)) {
                this.GeocodeAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodeAddressOperationCompleted);
            }
            this.InvokeAsync("GeocodeAddress", new object[] {
                        Address,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodeAddressOperationCompleted, userState);
        }
        
        private void OnGeocodeAddressOperationCompleted(object arg) {
            if ((this.GeocodeAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodeAddressCompleted(this, new GeocodeAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PostcodeAnywhere2/GeocodeAddress_DataSet", RequestNamespace="PostcodeAnywhere2", ResponseNamespace="PostcodeAnywhere2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GeocodeAddress_DataSet(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            object[] results = this.Invoke("GeocodeAddress_DataSet", new object[] {
                        Address,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GeocodeAddress_DataSetAsync(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId) {
            this.GeocodeAddress_DataSetAsync(Address, Accuracy, AccountCode, LicenseKey, MachineId, null);
        }
        
        /// <remarks/>
        public void GeocodeAddress_DataSetAsync(string Address, string Accuracy, string AccountCode, string LicenseKey, string MachineId, object userState) {
            if ((this.GeocodeAddress_DataSetOperationCompleted == null)) {
                this.GeocodeAddress_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeocodeAddress_DataSetOperationCompleted);
            }
            this.InvokeAsync("GeocodeAddress_DataSet", new object[] {
                        Address,
                        Accuracy,
                        AccountCode,
                        LicenseKey,
                        MachineId}, this.GeocodeAddress_DataSetOperationCompleted, userState);
        }
        
        private void OnGeocodeAddress_DataSetOperationCompleted(object arg) {
            if ((this.GeocodeAddress_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeocodeAddress_DataSetCompleted(this, new GeocodeAddress_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class InterimResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private InterimResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public InterimResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class InterimResult {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class GeocodeResult {
        
        private string locationField;
        
        private int gridEastMField;
        
        private int gridNorthMField;
        
        private double longitudeField;
        
        private double latitudeField;
        
        private string osReferenceField;
        
        private double wgs84LongitudeField;
        
        private double wgs84LatitudeField;
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public int GridEastM {
            get {
                return this.gridEastMField;
            }
            set {
                this.gridEastMField = value;
            }
        }
        
        /// <remarks/>
        public int GridNorthM {
            get {
                return this.gridNorthMField;
            }
            set {
                this.gridNorthMField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string OsReference {
            get {
                return this.osReferenceField;
            }
            set {
                this.osReferenceField = value;
            }
        }
        
        /// <remarks/>
        public double Wgs84Longitude {
            get {
                return this.wgs84LongitudeField;
            }
            set {
                this.wgs84LongitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Wgs84Latitude {
            get {
                return this.wgs84LatitudeField;
            }
            set {
                this.wgs84LatitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class GeocodeResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private GeocodeResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public GeocodeResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class StatisticsResult {
        
        private string postcodeField;
        
        private int residentialTotalField;
        
        private int smallOrganisationTotalField;
        
        private int largeOrganisationTotalField;
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public int ResidentialTotal {
            get {
                return this.residentialTotalField;
            }
            set {
                this.residentialTotalField = value;
            }
        }
        
        /// <remarks/>
        public int SmallOrganisationTotal {
            get {
                return this.smallOrganisationTotalField;
            }
            set {
                this.smallOrganisationTotalField = value;
            }
        }
        
        /// <remarks/>
        public int LargeOrganisationTotal {
            get {
                return this.largeOrganisationTotalField;
            }
            set {
                this.largeOrganisationTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class StatisticsResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private StatisticsResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StatisticsResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class CleanseResult {
        
        private string idField;
        
        private string descriptionField;
        
        private double confidenceField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Confidence {
            get {
                return this.confidenceField;
            }
            set {
                this.confidenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class CleanseResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private CleanseResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CleanseResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class ChangesResult {
        
        private string idField;
        
        private System.DateTime changeDateField;
        
        private enChangeType changeTypeField;
        
        private enChangeReason changeReasonField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ChangeDate {
            get {
                return this.changeDateField;
            }
            set {
                this.changeDateField = value;
            }
        }
        
        /// <remarks/>
        public enChangeType ChangeType {
            get {
                return this.changeTypeField;
            }
            set {
                this.changeTypeField = value;
            }
        }
        
        /// <remarks/>
        public enChangeReason ChangeReason {
            get {
                return this.changeReasonField;
            }
            set {
                this.changeReasonField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enChangeType {
        
        /// <remarks/>
        enChangeTypeAddition,
        
        /// <remarks/>
        enChangeTypeDeletion,
        
        /// <remarks/>
        enChangeTypeChange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enChangeReason {
        
        /// <remarks/>
        enChangeReasonNewProperty,
        
        /// <remarks/>
        enChangeReasonErrorCorrection,
        
        /// <remarks/>
        enChangeReasonDemolition,
        
        /// <remarks/>
        enChangeReasonCodingRevision,
        
        /// <remarks/>
        enChangeReasonOrganisationChange,
        
        /// <remarks/>
        enChangeReasonStatusChange,
        
        /// <remarks/>
        enChangeReasonLargeUserClosedDown,
        
        /// <remarks/>
        enChangeReasonBuildingDetailsChanged,
        
        /// <remarks/>
        enChangeReasonLargeUserAddressChanged,
        
        /// <remarks/>
        enChangeReasonUnknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class ChangesResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private ChangesResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ChangesResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class NearestResult {
        
        private string originPostcodeField;
        
        private string destinationPostcodeField;
        
        private string idField;
        
        private string descriptionField;
        
        private double distanceField;
        
        private int gridEastMField;
        
        private int gridNorthMField;
        
        /// <remarks/>
        public string OriginPostcode {
            get {
                return this.originPostcodeField;
            }
            set {
                this.originPostcodeField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationPostcode {
            get {
                return this.destinationPostcodeField;
            }
            set {
                this.destinationPostcodeField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public int GridEastM {
            get {
                return this.gridEastMField;
            }
            set {
                this.gridEastMField = value;
            }
        }
        
        /// <remarks/>
        public int GridNorthM {
            get {
                return this.gridNorthMField;
            }
            set {
                this.gridNorthMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class NearestResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private NearestResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NearestResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class LocationResult {
        
        private string descriptionField;
        
        private int gridEastMField;
        
        private int gridNorthMField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int GridEastM {
            get {
                return this.gridEastMField;
            }
            set {
                this.gridEastMField = value;
            }
        }
        
        /// <remarks/>
        public int GridNorthM {
            get {
                return this.gridNorthMField;
            }
            set {
                this.gridNorthMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class LocationResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private LocationResult[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LocationResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class AddressGeographicData {
        
        private int gridEastMField;
        
        private int gridNorthMField;
        
        private string districtCodeField;
        
        private string wardCodeField;
        
        private string nHSCodeField;
        
        private string nHSRegionCodeField;
        
        private string countyCodeField;
        
        private string countryCodeField;
        
        private string wardStatusField;
        
        private string wardNameField;
        
        private string districtNameField;
        
        private bool objective2Field;
        
        private string objective2RegionField;
        
        private bool transitionalField;
        
        private double longitudeField;
        
        private double latitudeField;
        
        private string oSReferenceField;
        
        private double wGS84LongitudeField;
        
        private double wGS84LatitudeField;
        
        /// <remarks/>
        public int GridEastM {
            get {
                return this.gridEastMField;
            }
            set {
                this.gridEastMField = value;
            }
        }
        
        /// <remarks/>
        public int GridNorthM {
            get {
                return this.gridNorthMField;
            }
            set {
                this.gridNorthMField = value;
            }
        }
        
        /// <remarks/>
        public string DistrictCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string NHSCode {
            get {
                return this.nHSCodeField;
            }
            set {
                this.nHSCodeField = value;
            }
        }
        
        /// <remarks/>
        public string NHSRegionCode {
            get {
                return this.nHSRegionCodeField;
            }
            set {
                this.nHSRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountyCode {
            get {
                return this.countyCodeField;
            }
            set {
                this.countyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardStatus {
            get {
                return this.wardStatusField;
            }
            set {
                this.wardStatusField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string DistrictName {
            get {
                return this.districtNameField;
            }
            set {
                this.districtNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Objective2 {
            get {
                return this.objective2Field;
            }
            set {
                this.objective2Field = value;
            }
        }
        
        /// <remarks/>
        public string Objective2Region {
            get {
                return this.objective2RegionField;
            }
            set {
                this.objective2RegionField = value;
            }
        }
        
        /// <remarks/>
        public bool Transitional {
            get {
                return this.transitionalField;
            }
            set {
                this.transitionalField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string OSReference {
            get {
                return this.oSReferenceField;
            }
            set {
                this.oSReferenceField = value;
            }
        }
        
        /// <remarks/>
        public double WGS84Longitude {
            get {
                return this.wGS84LongitudeField;
            }
            set {
                this.wGS84LongitudeField = value;
            }
        }
        
        /// <remarks/>
        public double WGS84Latitude {
            get {
                return this.wGS84LatitudeField;
            }
            set {
                this.wGS84LatitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class AddressRawData {
        
        private string deliveryPointSuffixField;
        
        private string checksumField;
        
        private string nameOrNumberField;
        
        private string subBuildingNameField;
        
        private string buildingNameField;
        
        private string buildingNumberField;
        
        private string thoroughfareNameField;
        
        private string thoroughfareDescriptorField;
        
        private string dependentThoroughfareNameField;
        
        private string dependentThoroughfareDescriptorField;
        
        private string doubleDependentLocalityField;
        
        private string dependentLocalityField;
        
        private string pOBoxNumberField;
        
        private string numberOfHouseholdsField;
        
        private string concatenationOperatorField;
        
        private string buildingNameOrNumberField;
        
        private string buildingFlatField;
        
        /// <remarks/>
        public string DeliveryPointSuffix {
            get {
                return this.deliveryPointSuffixField;
            }
            set {
                this.deliveryPointSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string Checksum {
            get {
                return this.checksumField;
            }
            set {
                this.checksumField = value;
            }
        }
        
        /// <remarks/>
        public string NameOrNumber {
            get {
                return this.nameOrNumberField;
            }
            set {
                this.nameOrNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SubBuildingName {
            get {
                return this.subBuildingNameField;
            }
            set {
                this.subBuildingNameField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingName {
            get {
                return this.buildingNameField;
            }
            set {
                this.buildingNameField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingNumber {
            get {
                return this.buildingNumberField;
            }
            set {
                this.buildingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ThoroughfareName {
            get {
                return this.thoroughfareNameField;
            }
            set {
                this.thoroughfareNameField = value;
            }
        }
        
        /// <remarks/>
        public string ThoroughfareDescriptor {
            get {
                return this.thoroughfareDescriptorField;
            }
            set {
                this.thoroughfareDescriptorField = value;
            }
        }
        
        /// <remarks/>
        public string DependentThoroughfareName {
            get {
                return this.dependentThoroughfareNameField;
            }
            set {
                this.dependentThoroughfareNameField = value;
            }
        }
        
        /// <remarks/>
        public string DependentThoroughfareDescriptor {
            get {
                return this.dependentThoroughfareDescriptorField;
            }
            set {
                this.dependentThoroughfareDescriptorField = value;
            }
        }
        
        /// <remarks/>
        public string DoubleDependentLocality {
            get {
                return this.doubleDependentLocalityField;
            }
            set {
                this.doubleDependentLocalityField = value;
            }
        }
        
        /// <remarks/>
        public string DependentLocality {
            get {
                return this.dependentLocalityField;
            }
            set {
                this.dependentLocalityField = value;
            }
        }
        
        /// <remarks/>
        public string POBoxNumber {
            get {
                return this.pOBoxNumberField;
            }
            set {
                this.pOBoxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfHouseholds {
            get {
                return this.numberOfHouseholdsField;
            }
            set {
                this.numberOfHouseholdsField = value;
            }
        }
        
        /// <remarks/>
        public string ConcatenationOperator {
            get {
                return this.concatenationOperatorField;
            }
            set {
                this.concatenationOperatorField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingNameOrNumber {
            get {
                return this.buildingNameOrNumberField;
            }
            set {
                this.buildingNameOrNumberField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingFlat {
            get {
                return this.buildingFlatField;
            }
            set {
                this.buildingFlatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class Address {
        
        private string idField;
        
        private string organisationNameField;
        
        private string departmentNameField;
        
        private string line1Field;
        
        private string line2Field;
        
        private string line3Field;
        
        private string line4Field;
        
        private string line5Field;
        
        private string postTownField;
        
        private string countyField;
        
        private string postcodeField;
        
        private string mailsortField;
        
        private string barcodeField;
        
        private bool isResidentialField;
        
        private bool isSmallOrganisationField;
        
        private bool isLargeOrganisationField;
        
        private AddressRawData rawDataField;
        
        private AddressGeographicData geographicDataField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string OrganisationName {
            get {
                return this.organisationNameField;
            }
            set {
                this.organisationNameField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        public string Line1 {
            get {
                return this.line1Field;
            }
            set {
                this.line1Field = value;
            }
        }
        
        /// <remarks/>
        public string Line2 {
            get {
                return this.line2Field;
            }
            set {
                this.line2Field = value;
            }
        }
        
        /// <remarks/>
        public string Line3 {
            get {
                return this.line3Field;
            }
            set {
                this.line3Field = value;
            }
        }
        
        /// <remarks/>
        public string Line4 {
            get {
                return this.line4Field;
            }
            set {
                this.line4Field = value;
            }
        }
        
        /// <remarks/>
        public string Line5 {
            get {
                return this.line5Field;
            }
            set {
                this.line5Field = value;
            }
        }
        
        /// <remarks/>
        public string PostTown {
            get {
                return this.postTownField;
            }
            set {
                this.postTownField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Mailsort {
            get {
                return this.mailsortField;
            }
            set {
                this.mailsortField = value;
            }
        }
        
        /// <remarks/>
        public string Barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsResidential {
            get {
                return this.isResidentialField;
            }
            set {
                this.isResidentialField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSmallOrganisation {
            get {
                return this.isSmallOrganisationField;
            }
            set {
                this.isSmallOrganisationField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLargeOrganisation {
            get {
                return this.isLargeOrganisationField;
            }
            set {
                this.isLargeOrganisationField = value;
            }
        }
        
        /// <remarks/>
        public AddressRawData RawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        public AddressGeographicData GeographicData {
            get {
                return this.geographicDataField;
            }
            set {
                this.geographicDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class AddressResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private Address[] resultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Address[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public partial class CombinedResults {
        
        private bool isErrorField;
        
        private int errorNumberField;
        
        private string errorMessageField;
        
        private enResultType resultTypeField;
        
        private InterimResults interimResultsField;
        
        private AddressResults addressResultsField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public enResultType ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
        
        /// <remarks/>
        public InterimResults InterimResults {
            get {
                return this.interimResultsField;
            }
            set {
                this.interimResultsField = value;
            }
        }
        
        /// <remarks/>
        public AddressResults AddressResults {
            get {
                return this.addressResultsField;
            }
            set {
                this.addressResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enResultType {
        
        /// <remarks/>
        enResultTypeError,
        
        /// <remarks/>
        enResultTypeStreetList,
        
        /// <remarks/>
        enResultTypePropertyList,
        
        /// <remarks/>
        enResultTypeAddresses,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enLanguage {
        
        /// <remarks/>
        enLanguageEnglish,
        
        /// <remarks/>
        enLanguageWelsh,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enContentType {
        
        /// <remarks/>
        enContentStandardAddress,
        
        /// <remarks/>
        enContentExpandedAddress,
        
        /// <remarks/>
        enContentGeographicAddress,
        
        /// <remarks/>
        enContentGeographicOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enDatum {
        
        /// <remarks/>
        enDatumWGS84,
        
        /// <remarks/>
        enDatumOSGB1936,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="PostcodeAnywhere2")]
    public enum enUnitType {
        
        /// <remarks/>
        enUnitTypeMiles,
        
        /// <remarks/>
        enUnitTypeMeters,
        
        /// <remarks/>
        enUnitTypeKilometers,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BrowseCompletedEventHandler(object sender, BrowseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BrowseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BrowseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Browse_DataSetCompletedEventHandler(object sender, Browse_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Browse_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Browse_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByAreaCompletedEventHandler(object sender, ByAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByArea_DataSetCompletedEventHandler(object sender, ByArea_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByArea_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByArea_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPostcodeCompletedEventHandler(object sender, ByPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPostcode_DataSetCompletedEventHandler(object sender, ByPostcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPostcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPostcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPostcode_CombinedCompletedEventHandler(object sender, ByPostcode_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPostcode_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPostcode_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPostcodeFilteredCompletedEventHandler(object sender, ByPostcodeFilteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPostcodeFilteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPostcodeFilteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPostcodeFiltered_DataSetCompletedEventHandler(object sender, ByPostcodeFiltered_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPostcodeFiltered_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPostcodeFiltered_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByCoordinatesCompletedEventHandler(object sender, ByCoordinatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByCoordinatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByCoordinatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByCoordinates_DataSetCompletedEventHandler(object sender, ByCoordinates_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByCoordinates_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByCoordinates_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByOutcodeCompletedEventHandler(object sender, ByOutcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByOutcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByOutcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByOutcode_DataSetCompletedEventHandler(object sender, ByOutcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByOutcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByOutcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByOrganisationCompletedEventHandler(object sender, ByOrganisationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByOrganisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByOrganisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByOrganisation_DataSetCompletedEventHandler(object sender, ByOrganisation_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByOrganisation_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByOrganisation_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByOrganisation_CombinedCompletedEventHandler(object sender, ByOrganisation_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByOrganisation_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByOrganisation_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetCompletedEventHandler(object sender, ByStreetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreet_DatasetCompletedEventHandler(object sender, ByStreet_DatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreet_DatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreet_DatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetFilteredCompletedEventHandler(object sender, ByStreetFilteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetFilteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetFilteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetFiltered_DatasetCompletedEventHandler(object sender, ByStreetFiltered_DatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetFiltered_DatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetFiltered_DatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreet_CombinedCompletedEventHandler(object sender, ByStreet_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreet_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreet_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByBuildingCompletedEventHandler(object sender, ByBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByBuilding_DatasetCompletedEventHandler(object sender, ByBuilding_DatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByBuilding_DatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByBuilding_DatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByBuilding_CombinedCompletedEventHandler(object sender, ByBuilding_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByBuilding_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByBuilding_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetKeyCompletedEventHandler(object sender, ByStreetKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetKey_DataSetCompletedEventHandler(object sender, ByStreetKey_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetKey_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetKey_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByStreetKey_CombinedCompletedEventHandler(object sender, ByStreetKey_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByStreetKey_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByStreetKey_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByLocalityKeyCompletedEventHandler(object sender, ByLocalityKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByLocalityKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByLocalityKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByLocalityKey_DataSetCompletedEventHandler(object sender, ByLocalityKey_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByLocalityKey_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByLocalityKey_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByLocationCompletedEventHandler(object sender, ByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByLocation_DataSetCompletedEventHandler(object sender, ByLocation_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByLocation_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByLocation_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LocationCompletedEventHandler(object sender, LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Location_DataSetCompletedEventHandler(object sender, Location_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Location_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Location_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByFreeTextCompletedEventHandler(object sender, ByFreeTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByFreeTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByFreeTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByFreeText_DataSetCompletedEventHandler(object sender, ByFreeText_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByFreeText_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByFreeText_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByFreeText_CombinedCompletedEventHandler(object sender, ByFreeText_CombinedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByFreeText_CombinedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByFreeText_CombinedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CombinedResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CombinedResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FetchAddress_SimpleCompletedEventHandler(object sender, FetchAddress_SimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAddress_SimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAddress_SimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FetchAddressCompletedEventHandler(object sender, FetchAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FastAddressCompletedEventHandler(object sender, FastAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FastAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FastAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FetchAddress_DataSetCompletedEventHandler(object sender, FetchAddress_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAddress_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAddress_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FastAddress_DataSetCompletedEventHandler(object sender, FastAddress_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FastAddress_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FastAddress_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DistanceCompletedEventHandler(object sender, DistanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DistanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestPostcodeCompletedEventHandler(object sender, NearestPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestPostcode_DataSetCompletedEventHandler(object sender, NearestPostcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestPostcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestPostcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestCompletedEventHandler(object sender, NearestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Nearest_DataSetCompletedEventHandler(object sender, Nearest_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Nearest_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Nearest_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StoredNearestCompletedEventHandler(object sender, StoredNearestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredNearestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredNearestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StoredNearest_DataSetCompletedEventHandler(object sender, StoredNearest_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredNearest_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredNearest_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestRadialCompletedEventHandler(object sender, NearestRadialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestRadialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestRadialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestRadial_DataSetCompletedEventHandler(object sender, NearestRadial_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestRadial_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestRadial_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StoredNearestRadialCompletedEventHandler(object sender, StoredNearestRadialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredNearestRadialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredNearestRadialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StoredNearestRadial_DataSetCompletedEventHandler(object sender, StoredNearestRadial_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredNearestRadial_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredNearestRadial_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangesCompletedEventHandler(object sender, ChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangesResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangesResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Changes_DataSetCompletedEventHandler(object sender, Changes_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Changes_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Changes_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CleanseCompletedEventHandler(object sender, CleanseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CleanseResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CleanseResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Cleanse_DataSetCompletedEventHandler(object sender, Cleanse_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cleanse_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Cleanse_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchCleanseCompletedEventHandler(object sender, BatchCleanseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchCleanseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchCleanseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchCleanse_DataSetCompletedEventHandler(object sender, BatchCleanse_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchCleanse_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchCleanse_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchFetchCompletedEventHandler(object sender, BatchFetchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchFetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchFetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchFetch_DataSetCompletedEventHandler(object sender, BatchFetch_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchFetch_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchFetch_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByPostcodeCompletedEventHandler(object sender, StatisticsByPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByPostcode_DataSetCompletedEventHandler(object sender, StatisticsByPostcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByPostcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByPostcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByOutcodeCompletedEventHandler(object sender, StatisticsByOutcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByOutcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByOutcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByOutcode_DataSetCompletedEventHandler(object sender, StatisticsByOutcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByOutcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByOutcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsBySectorCompletedEventHandler(object sender, StatisticsBySectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsBySectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsBySectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsBySector_DataSetCompletedEventHandler(object sender, StatisticsBySector_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsBySector_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsBySector_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByStreetKeyCompletedEventHandler(object sender, StatisticsByStreetKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByStreetKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByStreetKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatisticsResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatisticsResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatisticsByStreetKey_DataSetCompletedEventHandler(object sender, StatisticsByStreetKey_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatisticsByStreetKey_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatisticsByStreetKey_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestOutcodesCompletedEventHandler(object sender, NearestOutcodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestOutcodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestOutcodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestOutcodes_DataSetCompletedEventHandler(object sender, NearestOutcodes_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestOutcodes_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestOutcodes_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestSectorsCompletedEventHandler(object sender, NearestSectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestSectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestSectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NearestResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NearestResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NearestSectors_DataSetCompletedEventHandler(object sender, NearestSectors_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NearestSectors_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NearestSectors_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPoBoxCompletedEventHandler(object sender, ByPoBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPoBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPoBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InterimResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InterimResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ByPoBox_DataSetCompletedEventHandler(object sender, ByPoBox_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByPoBox_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByPoBox_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodePostcodeCompletedEventHandler(object sender, GeocodePostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodePostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodePostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeocodeResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeocodeResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodePostcode_DataSetCompletedEventHandler(object sender, GeocodePostcode_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodePostcode_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodePostcode_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodeAddressIdCompletedEventHandler(object sender, GeocodeAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodeAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodeAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeocodeResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeocodeResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodeAddressId_DataSetCompletedEventHandler(object sender, GeocodeAddressId_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodeAddressId_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodeAddressId_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodeAddressCompletedEventHandler(object sender, GeocodeAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodeAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodeAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeocodeResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeocodeResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeocodeAddress_DataSetCompletedEventHandler(object sender, GeocodeAddress_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeocodeAddress_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeocodeAddress_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591