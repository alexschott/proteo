//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Orchestrator.WebUI.textanywhere.ws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TextAnywhere_SMSSoap", Namespace="http://ws.textanywhere.net/TA_WS")]
    public partial class TextAnywhere_SMS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMSStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMSStatusExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReplyByClientRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextInboundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextInboundXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormatNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceTestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TextAnywhere_SMS() {
            this.Url = global::Orchestrator.WebUI.Properties.Settings.Default.WebUI_textanywhere_ws_TextAnywhere_SMS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMSExCompletedEventHandler SendSMSExCompleted;
        
        /// <remarks/>
        public event SMSStatusCompletedEventHandler SMSStatusCompleted;
        
        /// <remarks/>
        public event SMSStatusExCompletedEventHandler SMSStatusExCompleted;
        
        /// <remarks/>
        public event GetReplyCompletedEventHandler GetReplyCompleted;
        
        /// <remarks/>
        public event GetReplyByClientRefCompletedEventHandler GetReplyByClientRefCompleted;
        
        /// <remarks/>
        public event DeleteReplyCompletedEventHandler DeleteReplyCompleted;
        
        /// <remarks/>
        public event GetTextInboundCompletedEventHandler GetTextInboundCompleted;
        
        /// <remarks/>
        public event GetTextInboundXMLCompletedEventHandler GetTextInboundXMLCompleted;
        
        /// <remarks/>
        public event FormatNumberCompletedEventHandler FormatNumberCompleted;
        
        /// <remarks/>
        public event CheckNumberCompletedEventHandler CheckNumberCompleted;
        
        /// <remarks/>
        public event ServiceTestCompletedEventHandler ServiceTestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/SendSMS", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMS(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string Destination, string Body, int SMS_Type, int SMS_encoding) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref,
                        Billing_Ref,
                        Connection,
                        Originator,
                        OType,
                        Destination,
                        Body,
                        SMS_Type,
                        SMS_encoding});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string Destination, string Body, int SMS_Type, int SMS_encoding) {
            this.SendSMSAsync(Client_ID, Client_Pass, Client_Ref, Billing_Ref, Connection, Originator, OType, Destination, Body, SMS_Type, SMS_encoding, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string Destination, string Body, int SMS_Type, int SMS_encoding, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref,
                        Billing_Ref,
                        Connection,
                        Originator,
                        OType,
                        Destination,
                        Body,
                        SMS_Type,
                        SMS_encoding}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/SendSMSEx", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMSEx(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string DestinationEx, string Body, int SMS_Type, int Reply_Type, string Reply_Data) {
            object[] results = this.Invoke("SendSMSEx", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref,
                        Billing_Ref,
                        Connection,
                        Originator,
                        OType,
                        DestinationEx,
                        Body,
                        SMS_Type,
                        Reply_Type,
                        Reply_Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSExAsync(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string DestinationEx, string Body, int SMS_Type, int Reply_Type, string Reply_Data) {
            this.SendSMSExAsync(Client_ID, Client_Pass, Client_Ref, Billing_Ref, Connection, Originator, OType, DestinationEx, Body, SMS_Type, Reply_Type, Reply_Data, null);
        }
        
        /// <remarks/>
        public void SendSMSExAsync(string Client_ID, string Client_Pass, string Client_Ref, string Billing_Ref, int Connection, string Originator, int OType, string DestinationEx, string Body, int SMS_Type, int Reply_Type, string Reply_Data, object userState) {
            if ((this.SendSMSExOperationCompleted == null)) {
                this.SendSMSExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSExOperationCompleted);
            }
            this.InvokeAsync("SendSMSEx", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref,
                        Billing_Ref,
                        Connection,
                        Originator,
                        OType,
                        DestinationEx,
                        Body,
                        SMS_Type,
                        Reply_Type,
                        Reply_Data}, this.SendSMSExOperationCompleted, userState);
        }
        
        private void OnSendSMSExOperationCompleted(object arg) {
            if ((this.SendSMSExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSExCompleted(this, new SendSMSExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/SMSStatus", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SMSStatus(string Client_ID, string Client_Pass, string Client_Ref) {
            object[] results = this.Invoke("SMSStatus", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SMSStatusAsync(string Client_ID, string Client_Pass, string Client_Ref) {
            this.SMSStatusAsync(Client_ID, Client_Pass, Client_Ref, null);
        }
        
        /// <remarks/>
        public void SMSStatusAsync(string Client_ID, string Client_Pass, string Client_Ref, object userState) {
            if ((this.SMSStatusOperationCompleted == null)) {
                this.SMSStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMSStatusOperationCompleted);
            }
            this.InvokeAsync("SMSStatus", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref}, this.SMSStatusOperationCompleted, userState);
        }
        
        private void OnSMSStatusOperationCompleted(object arg) {
            if ((this.SMSStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMSStatusCompleted(this, new SMSStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/SMSStatusEx", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMSStatusEx(string Client_ID, string Client_Pass, string Client_Ref) {
            object[] results = this.Invoke("SMSStatusEx", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SMSStatusExAsync(string Client_ID, string Client_Pass, string Client_Ref) {
            this.SMSStatusExAsync(Client_ID, Client_Pass, Client_Ref, null);
        }
        
        /// <remarks/>
        public void SMSStatusExAsync(string Client_ID, string Client_Pass, string Client_Ref, object userState) {
            if ((this.SMSStatusExOperationCompleted == null)) {
                this.SMSStatusExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMSStatusExOperationCompleted);
            }
            this.InvokeAsync("SMSStatusEx", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref}, this.SMSStatusExOperationCompleted, userState);
        }
        
        private void OnSMSStatusExOperationCompleted(object arg) {
            if ((this.SMSStatusExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMSStatusExCompleted(this, new SMSStatusExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/GetReply", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReply(string Client_ID, string Client_Pass) {
            object[] results = this.Invoke("GetReply", new object[] {
                        Client_ID,
                        Client_Pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReplyAsync(string Client_ID, string Client_Pass) {
            this.GetReplyAsync(Client_ID, Client_Pass, null);
        }
        
        /// <remarks/>
        public void GetReplyAsync(string Client_ID, string Client_Pass, object userState) {
            if ((this.GetReplyOperationCompleted == null)) {
                this.GetReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReplyOperationCompleted);
            }
            this.InvokeAsync("GetReply", new object[] {
                        Client_ID,
                        Client_Pass}, this.GetReplyOperationCompleted, userState);
        }
        
        private void OnGetReplyOperationCompleted(object arg) {
            if ((this.GetReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReplyCompleted(this, new GetReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/GetReplyByClientRef", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReplyByClientRef(string Client_ID, string Client_Pass, string Client_Ref) {
            object[] results = this.Invoke("GetReplyByClientRef", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReplyByClientRefAsync(string Client_ID, string Client_Pass, string Client_Ref) {
            this.GetReplyByClientRefAsync(Client_ID, Client_Pass, Client_Ref, null);
        }
        
        /// <remarks/>
        public void GetReplyByClientRefAsync(string Client_ID, string Client_Pass, string Client_Ref, object userState) {
            if ((this.GetReplyByClientRefOperationCompleted == null)) {
                this.GetReplyByClientRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReplyByClientRefOperationCompleted);
            }
            this.InvokeAsync("GetReplyByClientRef", new object[] {
                        Client_ID,
                        Client_Pass,
                        Client_Ref}, this.GetReplyByClientRefOperationCompleted, userState);
        }
        
        private void OnGetReplyByClientRefOperationCompleted(object arg) {
            if ((this.GetReplyByClientRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReplyByClientRefCompleted(this, new GetReplyByClientRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/DeleteReply", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteReply(string Client_ID, string Client_Pass, string IDs) {
            object[] results = this.Invoke("DeleteReply", new object[] {
                        Client_ID,
                        Client_Pass,
                        IDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReplyAsync(string Client_ID, string Client_Pass, string IDs) {
            this.DeleteReplyAsync(Client_ID, Client_Pass, IDs, null);
        }
        
        /// <remarks/>
        public void DeleteReplyAsync(string Client_ID, string Client_Pass, string IDs, object userState) {
            if ((this.DeleteReplyOperationCompleted == null)) {
                this.DeleteReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReplyOperationCompleted);
            }
            this.InvokeAsync("DeleteReply", new object[] {
                        Client_ID,
                        Client_Pass,
                        IDs}, this.DeleteReplyOperationCompleted, userState);
        }
        
        private void OnDeleteReplyOperationCompleted(object arg) {
            if ((this.DeleteReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReplyCompleted(this, new DeleteReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/GetTextInbound", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTextInbound(string Client_ID, string Client_Pass, string Inbound_Number) {
            object[] results = this.Invoke("GetTextInbound", new object[] {
                        Client_ID,
                        Client_Pass,
                        Inbound_Number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextInboundAsync(string Client_ID, string Client_Pass, string Inbound_Number) {
            this.GetTextInboundAsync(Client_ID, Client_Pass, Inbound_Number, null);
        }
        
        /// <remarks/>
        public void GetTextInboundAsync(string Client_ID, string Client_Pass, string Inbound_Number, object userState) {
            if ((this.GetTextInboundOperationCompleted == null)) {
                this.GetTextInboundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextInboundOperationCompleted);
            }
            this.InvokeAsync("GetTextInbound", new object[] {
                        Client_ID,
                        Client_Pass,
                        Inbound_Number}, this.GetTextInboundOperationCompleted, userState);
        }
        
        private void OnGetTextInboundOperationCompleted(object arg) {
            if ((this.GetTextInboundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextInboundCompleted(this, new GetTextInboundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/GetTextInboundXML", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTextInboundXML(string Client_ID, string Client_Pass, string Inbound_Number) {
            object[] results = this.Invoke("GetTextInboundXML", new object[] {
                        Client_ID,
                        Client_Pass,
                        Inbound_Number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextInboundXMLAsync(string Client_ID, string Client_Pass, string Inbound_Number) {
            this.GetTextInboundXMLAsync(Client_ID, Client_Pass, Inbound_Number, null);
        }
        
        /// <remarks/>
        public void GetTextInboundXMLAsync(string Client_ID, string Client_Pass, string Inbound_Number, object userState) {
            if ((this.GetTextInboundXMLOperationCompleted == null)) {
                this.GetTextInboundXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextInboundXMLOperationCompleted);
            }
            this.InvokeAsync("GetTextInboundXML", new object[] {
                        Client_ID,
                        Client_Pass,
                        Inbound_Number}, this.GetTextInboundXMLOperationCompleted, userState);
        }
        
        private void OnGetTextInboundXMLOperationCompleted(object arg) {
            if ((this.GetTextInboundXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextInboundXMLCompleted(this, new GetTextInboundXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/FormatNumber", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FormatNumber(string Number) {
            object[] results = this.Invoke("FormatNumber", new object[] {
                        Number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FormatNumberAsync(string Number) {
            this.FormatNumberAsync(Number, null);
        }
        
        /// <remarks/>
        public void FormatNumberAsync(string Number, object userState) {
            if ((this.FormatNumberOperationCompleted == null)) {
                this.FormatNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormatNumberOperationCompleted);
            }
            this.InvokeAsync("FormatNumber", new object[] {
                        Number}, this.FormatNumberOperationCompleted, userState);
        }
        
        private void OnFormatNumberOperationCompleted(object arg) {
            if ((this.FormatNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormatNumberCompleted(this, new FormatNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/CheckNumber", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckNumber(string Number) {
            object[] results = this.Invoke("CheckNumber", new object[] {
                        Number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNumberAsync(string Number) {
            this.CheckNumberAsync(Number, null);
        }
        
        /// <remarks/>
        public void CheckNumberAsync(string Number, object userState) {
            if ((this.CheckNumberOperationCompleted == null)) {
                this.CheckNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNumberOperationCompleted);
            }
            this.InvokeAsync("CheckNumber", new object[] {
                        Number}, this.CheckNumberOperationCompleted, userState);
        }
        
        private void OnCheckNumberOperationCompleted(object arg) {
            if ((this.CheckNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNumberCompleted(this, new CheckNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.textanywhere.net/TA_WS/ServiceTest", RequestNamespace="http://ws.textanywhere.net/TA_WS", ResponseNamespace="http://ws.textanywhere.net/TA_WS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ServiceTest(string Client_ID, string Client_Pass) {
            object[] results = this.Invoke("ServiceTest", new object[] {
                        Client_ID,
                        Client_Pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceTestAsync(string Client_ID, string Client_Pass) {
            this.ServiceTestAsync(Client_ID, Client_Pass, null);
        }
        
        /// <remarks/>
        public void ServiceTestAsync(string Client_ID, string Client_Pass, object userState) {
            if ((this.ServiceTestOperationCompleted == null)) {
                this.ServiceTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceTestOperationCompleted);
            }
            this.InvokeAsync("ServiceTest", new object[] {
                        Client_ID,
                        Client_Pass}, this.ServiceTestOperationCompleted, userState);
        }
        
        private void OnServiceTestOperationCompleted(object arg) {
            if ((this.ServiceTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceTestCompleted(this, new ServiceTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSMSExCompletedEventHandler(object sender, SendSMSExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SMSStatusCompletedEventHandler(object sender, SMSStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMSStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SMSStatusExCompletedEventHandler(object sender, SMSStatusExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSStatusExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMSStatusExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReplyCompletedEventHandler(object sender, GetReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReplyByClientRefCompletedEventHandler(object sender, GetReplyByClientRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReplyByClientRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReplyByClientRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteReplyCompletedEventHandler(object sender, DeleteReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTextInboundCompletedEventHandler(object sender, GetTextInboundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextInboundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextInboundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTextInboundXMLCompletedEventHandler(object sender, GetTextInboundXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextInboundXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextInboundXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FormatNumberCompletedEventHandler(object sender, FormatNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormatNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormatNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckNumberCompletedEventHandler(object sender, CheckNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ServiceTestCompletedEventHandler(object sender, ServiceTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591